{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useReducer } from \"react\";\nconst inputStateReducer = (state, action) => {\n  return {\n    value: \"\",\n    isTouched: false\n  };\n};\nconst useInput = validateValue => {\n  _s();\n  //   const [enteredvalue, setEnteredValue] = useState(\"\");\n  //   const [isTouched, setIsTouched] = useState(false);\n\n  useReducer(inputStateReducer);\n  const valueIsValid = validateValue(enteredvalue);\n  const hasError = !valueIsValid && isTouched;\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n  const inputBlurHandler = event => {\n    setIsTouched(true);\n  };\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n  return {\n    value: enteredvalue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"jy6jq7rVoxhm7wg6eOprl3hauQQ=\");\nexport default useInput;","map":{"version":3,"names":["useState","useReducer","inputStateReducer","state","action","value","isTouched","useInput","validateValue","_s","valueIsValid","enteredvalue","hasError","valueChangeHandler","event","setEnteredValue","target","inputBlurHandler","setIsTouched","reset","isValid"],"sources":["D:/krm/React/01-starting-project/src/hooks/use-input.js"],"sourcesContent":["import { useState, useReducer } from \"react\";\r\n\r\nconst inputStateReducer = (state, action) => {\r\n  return {\r\n    value: \"\",\r\n    isTouched: false,\r\n  };\r\n};\r\nconst useInput = (validateValue) => {\r\n  //   const [enteredvalue, setEnteredValue] = useState(\"\");\r\n  //   const [isTouched, setIsTouched] = useState(false);\r\n\r\n  useReducer(inputStateReducer);\r\n\r\n  const valueIsValid = validateValue(enteredvalue);\r\n\r\n  const hasError = !valueIsValid && isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    setEnteredValue(event.target.value);\r\n  };\r\n\r\n  const inputBlurHandler = (event) => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setEnteredValue(\"\");\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: enteredvalue,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAE5C,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC3C,OAAO;IACLC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE;EACb,CAAC;AACH,CAAC;AACD,MAAMC,QAAQ,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAClC;EACA;;EAEAR,UAAU,CAACC,iBAAiB,CAAC;EAE7B,MAAMQ,YAAY,GAAGF,aAAa,CAACG,YAAY,CAAC;EAEhD,MAAMC,QAAQ,GAAG,CAACF,YAAY,IAAIJ,SAAS;EAE3C,MAAMO,kBAAkB,GAAIC,KAAK,IAAK;IACpCC,eAAe,CAACD,KAAK,CAACE,MAAM,CAACX,KAAK,CAAC;EACrC,CAAC;EAED,MAAMY,gBAAgB,GAAIH,KAAK,IAAK;IAClCI,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAClBJ,eAAe,CAAC,EAAE,CAAC;IACnBG,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OAAO;IACLb,KAAK,EAAEM,YAAY;IACnBS,OAAO,EAAEV,YAAY;IACrBE,QAAQ;IACRC,kBAAkB;IAClBI,gBAAgB;IAChBE;EACF,CAAC;AACH,CAAC;AAACV,EAAA,CA/BIF,QAAQ;AAiCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
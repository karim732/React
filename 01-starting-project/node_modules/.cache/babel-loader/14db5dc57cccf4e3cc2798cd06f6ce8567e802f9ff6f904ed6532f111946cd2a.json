{"ast":null,"code":"var _jsxFileName = \"D:\\\\krm\\\\React\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(\"Name input is valid\");\n    }\n  }, [enteredNameIsValid]);\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    setEnteredName(\"\");\n  };\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = enteredNameIsValid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        ref: nameInputRef,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), !enteredNameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"bm/27lsNsiIXuRMukf2inprCLH4=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","console","log","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","trim","enteredValue","current","nameInputIsInvalid","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","ref","_c","$RefreshReg$"],"sources":["D:/krm/React/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(\"Name input is valid\");\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputClasses = enteredNameIsValid\n    ? \"form-control\"\n    : \"form-control invalid\";\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          ref={nameInputRef}\n          value={enteredName}\n        />\n        {!enteredNameIsValid && (\n          <p className=\"error-text\">Name must not be empty</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button type=\"submit\">Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
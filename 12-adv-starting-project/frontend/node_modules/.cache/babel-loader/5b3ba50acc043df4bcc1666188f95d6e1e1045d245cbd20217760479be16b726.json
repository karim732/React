{"ast":null,"code":"var _jsxFileName = \"D:\\\\krm\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json, redirect } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  // const params = useParams();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventsList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadedEvent(id) {\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events.\" };\n    // throw new Response(\n    //   JSON.stringify({ message: \"Could noot fetch events.\" }),\n    //   { status: 500 }\n    // )\n    return json({\n      message: \"Could noot fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const reData = await response.json();\n    return reData.events;\n    // return response;\n  }\n}\n\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not delete event.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","json","redirect","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadedEvent","id","response","ok","message","status","reData","events","loadEvents","fetch","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["D:/krm/React/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useRouteLoaderData, json, redirect } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nimport EventsList from \"../components/EventsList\";\r\nfunction EventDetailPage() {\r\n  // const params = useParams();\r\n  const data = useRouteLoaderData(\"event-detail\");\r\n  return (\r\n    <>\r\n      <EventItem event={data.event} />\r\n      <EventsList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\nasync function loadedEvent(id) {\r\n  if (!response.ok) {\r\n    // return { isError: true, message: \"Could not fetch events.\" };\r\n    // throw new Response(\r\n    //   JSON.stringify({ message: \"Could noot fetch events.\" }),\r\n    //   { status: 500 }\r\n    // )\r\n    return json({ message: \"Could noot fetch events.\" }, { status: 500 });\r\n  } else {\r\n    const reData = await response.json();\r\n    return reData.events;\r\n    // return response;\r\n  }\r\n}\r\nasync function loadEvents() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n}\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventId;\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch details for selected event.\" },\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n\r\nexport async function action({ params, request }) {\r\n  const eventId = params.eventId;\r\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\r\n    method: request.method,\r\n  });\r\n  if (!response.ok) {\r\n    throw json({ message: \"Could not delete event.\" }, { status: 500 });\r\n  }\r\n  return redirect(\"/events\");\r\n}\r\n"],"mappings":";;AAAA,SAASA,kBAAkB,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACrE,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAClD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB;EACA,MAAMC,IAAI,GAAGX,kBAAkB,CAAC,cAAc,CAAC;EAC/C,oBACEM,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACH,SAAS;MAACU,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCX,OAAA,CAACF,UAAU;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACd,CAAC;AAEP;AAACP,EAAA,CATQD,eAAe;EAAA,QAETT,kBAAkB;AAAA;AAAAkB,EAAA,GAFxBT,eAAe;AAWxB,eAAeA,eAAe;AAC9B,eAAeU,WAAWA,CAACC,EAAE,EAAE;EAC7B,IAAI,CAACC,QAAQ,CAACC,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA;IACA,OAAOrB,IAAI,CAAC;MAAEsB,OAAO,EAAE;IAA2B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACvE,CAAC,MAAM;IACL,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACpB,IAAI,CAAC,CAAC;IACpC,OAAOwB,MAAM,CAACC,MAAM;IACpB;EACF;AACF;;AACA,eAAeC,UAAUA,CAAA,EAAG;EAC1B,MAAMN,QAAQ,GAAG,MAAMO,KAAK,CAAC,8BAA8B,CAAC;AAC9D;AAEA,OAAO,eAAeC,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMX,EAAE,GAAGW,MAAM,CAACC,OAAO;EACzB,MAAMX,QAAQ,GAAG,MAAMO,KAAK,CAAC,+BAA+B,GAAGR,EAAE,CAAC;EAElE,IAAI,CAACC,QAAQ,CAACC,EAAE,EAAE;IAChB,MAAMrB,IAAI,CACR;MAAEsB,OAAO,EAAE;IAA8C,CAAC,EAC1D;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOH,QAAQ;EACjB;AACF;AAEA,OAAO,eAAeY,MAAMA,CAAC;EAAEF,MAAM;EAAED;AAAQ,CAAC,EAAE;EAChD,MAAME,OAAO,GAAGD,MAAM,CAACC,OAAO;EAC9B,MAAMX,QAAQ,GAAG,MAAMO,KAAK,CAAC,+BAA+B,GAAGI,OAAO,EAAE;IACtEE,MAAM,EAAEJ,OAAO,CAACI;EAClB,CAAC,CAAC;EACF,IAAI,CAACb,QAAQ,CAACC,EAAE,EAAE;IAChB,MAAMrB,IAAI,CAAC;MAAEsB,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE;EACA,OAAOtB,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC,IAAAgB,EAAA;AAAAiB,YAAA,CAAAjB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\krm\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json, redirect, defer, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  // const params = useParams();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event,\n      children: [e, /*#__PURE__*/_jsxDEV(EventItem, {\n        event: data.event\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: /*#__PURE__*/_jsxDEV(EventsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadedEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const reData = await response.json();\n    return reData.events;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events.\" };\n    // throw new Response(\n    //   JSON.stringify({ message: \"Could noot fetch events.\" }),\n    //   { status: 500 }\n    // )\n    return json({\n      message: \"Could noot fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const reData = await response.json();\n    return reData.events;\n    // return response;\n  }\n}\n\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: loadedEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not delete event.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","json","redirect","defer","Await","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","resolve","e","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadedEvent","id","response","fetch","ok","message","status","reData","loadEvents","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["D:/krm/React/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import {\r\n  useRouteLoaderData,\r\n  json,\r\n  redirect,\r\n  defer,\r\n  Await,\r\n} from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nimport EventsList from \"../components/EventsList\";\r\nfunction EventDetailPage() {\r\n  // const params = useParams();\r\n  const { event, events } = useRouteLoaderData(\"event-detail\");\r\n  return (\r\n    <>\r\n      <Await resolve={event}>\r\n        {e}\r\n        <EventItem event={data.event} />\r\n      </Await>\r\n      <Await resolve={events}>\r\n        <EventsList />\r\n      </Await>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\nasync function loadedEvent(id) {\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch details for selected event.\" },\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    const reData = await response.json();\r\n    return reData.events;\r\n  }\r\n}\r\nasync function loadEvents() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    // return { isError: true, message: \"Could not fetch events.\" };\r\n    // throw new Response(\r\n    //   JSON.stringify({ message: \"Could noot fetch events.\" }),\r\n    //   { status: 500 }\r\n    // )\r\n    return json({ message: \"Could noot fetch events.\" }, { status: 500 });\r\n  } else {\r\n    const reData = await response.json();\r\n    return reData.events;\r\n    // return response;\r\n  }\r\n}\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventId;\r\n  return defer({\r\n    event: loadedEvent(id),\r\n    events: loadEvents(),\r\n  });\r\n}\r\n\r\nexport async function action({ params, request }) {\r\n  const eventId = params.eventId;\r\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\r\n    method: request.method,\r\n  });\r\n  if (!response.ok) {\r\n    throw json({ message: \"Could not delete event.\" }, { status: 500 });\r\n  }\r\n  return redirect(\"/events\");\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}